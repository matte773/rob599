;; Auto-generated. Do not edit!


(when (boundp 'rob599_hw1::approachFeedback)
  (if (not (find-package "ROB599_HW1"))
    (make-package "ROB599_HW1"))
  (shadow 'approachFeedback (find-package "ROB599_HW1")))
(unless (find-package "ROB599_HW1::APPROACHFEEDBACK")
  (make-package "ROB599_HW1::APPROACHFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude approachFeedback.msg.html


(defclass rob599_hw1::approachFeedback
  :super ros::object
  :slots (_distance_to_obstacle ))

(defmethod rob599_hw1::approachFeedback
  (:init
   (&key
    ((:distance_to_obstacle __distance_to_obstacle) 0.0)
    )
   (send-super :init)
   (setq _distance_to_obstacle (float __distance_to_obstacle))
   self)
  (:distance_to_obstacle
   (&optional __distance_to_obstacle)
   (if __distance_to_obstacle (setq _distance_to_obstacle __distance_to_obstacle)) _distance_to_obstacle)
  (:serialization-length
   ()
   (+
    ;; float32 _distance_to_obstacle
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _distance_to_obstacle
       (sys::poke _distance_to_obstacle (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _distance_to_obstacle
     (setq _distance_to_obstacle (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get rob599_hw1::approachFeedback :md5sum-) "b0895f7086961063ab269c461c489df4")
(setf (get rob599_hw1::approachFeedback :datatype-) "rob599_hw1/approachFeedback")
(setf (get rob599_hw1::approachFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
float32 distance_to_obstacle

")



(provide :rob599_hw1/approachFeedback "b0895f7086961063ab269c461c489df4")


